{"ast":null,"code":"import axios from \"axios\";\nimport { MY_ORDER_RESET, ORDERS_RESET } from \"../../constants/orderConstants\";\nimport { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: MY_ORDER_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  dispatch({\n    type: USER_DETSI\n  });\n  dispatch({\n    type: ORDERS_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}  `\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}  `\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}  `\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}  `\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/actions/User.js"],"names":["axios","MY_ORDER_RESET","ORDERS_RESET","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_RESET","USER_LIST_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","USER_DETSI","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { MY_ORDER_RESET, ORDERS_RESET } from \"../../constants/orderConstants\";\nimport {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: MY_ORDER_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  dispatch({ type: USER_DETSI});\n  dispatch({ type: ORDERS_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}  `,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}  `,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}  `,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}  `,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,       \n    });\n  \n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n\n    dispatch({ type: USER_DETAILS_RESET });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}
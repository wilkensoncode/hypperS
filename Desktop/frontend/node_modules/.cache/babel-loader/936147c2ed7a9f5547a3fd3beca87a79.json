{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { cartReducer } from \"./reducers/Cart\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderReducer } from \"./reducers/Order\";\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers, userListReducers, userDeleteReducers, userUpdateReducer } from \"./reducers/User\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer } from \"./reducers/Product\";\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  myOrder: myOrderReducer,\n  userList: userListReducers,\n  userDelete: userDeleteReducers,\n  userUpdate: userUpdateReducer,\n  deleteProduct: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productupdate: productUpdateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/Store.js"],"names":["thunk","createStore","combineReducers","applyMiddleware","cartReducer","composeWithDevTools","orderCreateReducer","orderDetailsReducer","orderPayReducer","myOrderReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","userUpdateProfileReducers","userListReducers","userDeleteReducers","userUpdateReducer","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","reducers","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","myOrder","userList","userDelete","userUpdate","deleteProduct","productCreate","productupdate","productUpdateReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,EAAmEC,cAAnE,QAAyF,kBAAzF;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,mBAHF,EAIEC,yBAJF,EAKEC,gBALF,EAMEC,kBANF,EAOEC,iBAPF,QASO,iBATP;AAUA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,oBALP;AAOA,MAAMC,QAAQ,GAAGnB,eAAe,CAAC;AAC/BoB,EAAAA,WAAW,EAAEL,kBADkB;AAE/BM,EAAAA,cAAc,EAAEL,qBAFe;AAG/BM,EAAAA,IAAI,EAAEpB,WAHyB;AAI/BqB,EAAAA,SAAS,EAAEf,iBAJoB;AAK/BgB,EAAAA,YAAY,EAAEf,oBALiB;AAM/BgB,EAAAA,WAAW,EAAEf,mBANkB;AAO/BgB,EAAAA,iBAAiB,EAAEf,yBAPY;AAQ/BgB,EAAAA,WAAW,EAAEvB,kBARkB;AAS/BwB,EAAAA,YAAY,EAAEvB,mBATiB;AAU/BwB,EAAAA,QAAQ,EAAEvB,eAVqB;AAW/BwB,EAAAA,OAAO,EAAEvB,cAXsB;AAY/BwB,EAAAA,QAAQ,EAAEnB,gBAZqB;AAa/BoB,EAAAA,UAAU,EAAEnB,kBAbmB;AAc/BoB,EAAAA,UAAU,EAAEnB,iBAdmB;AAe/BoB,EAAAA,aAAa,EAAEjB,oBAfgB;AAgB/BkB,EAAAA,aAAa,EAAEjB,oBAhBgB;AAiB/BkB,EAAAA,aAAa,EAACC;AAjBiB,CAAD,CAAhC;AAmBA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBvB,EAAAA,IAAI,EAAE;AACJwB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBrB,EAAAA,SAAS,EAAE;AAAEyB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACnD,KAAD,CAAnB;AAEA,MAAMoD,KAAK,GAAGnD,WAAW,CACvBoB,QADuB,EAEvB0B,YAFuB,EAGvB1C,mBAAmB,CAACF,eAAe,CAAC,GAAGgD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { cartReducer } from \"./reducers/Cart\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, myOrderReducer } from \"./reducers/Order\";\nimport {\n  userLoginReducers,\n  userRegisterReducers,\n  userDetailsReducers,\n  userUpdateProfileReducers,\n  userListReducers,\n  userDeleteReducers,\n  userUpdateReducer,\n\n} from \"./reducers/User\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,   \n} from \"./reducers/Product\";\n\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  myOrder: myOrderReducer,\n  userList: userListReducers,\n  userDelete: userDeleteReducers,\n  userUpdate: userUpdateReducer,\n  deleteProduct: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productupdate:productUpdateReducer,\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
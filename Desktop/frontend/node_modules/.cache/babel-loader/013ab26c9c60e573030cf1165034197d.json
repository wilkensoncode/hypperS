{"ast":null,"code":"import { CART_ADD_ITEM } from \"../../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      console.log(item.image);\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(currentItem => currentItem.product === existItem.product ? item : currentItem)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","console","log","image","existItem","find","x","product","map","currentItem"],"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AAEE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,KAAjB;AACD,YAAMC,SAAS,GAAGT,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcR,IAAI,CAACQ,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAQ,EACN,GAAGT,KADG;AAENC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,GAAhB,CAAqBC,WAAD,IAC7BA,WAAW,CAACF,OAAZ,KAAwBH,SAAS,CAACG,OAAlC,GAA4CR,IAA5C,GAAmDU,WAD1C;AAFL,SAAR;AAOD,OARD,MAQO;AAEL,eAAO,EACL,GAAGd,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AAEH;AACE,aAAOJ,KAAP;AAxBJ;AA0BD,CA3BM","sourcesContent":["import { CART_ADD_ITEM } from \"../../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n\n      const item = action.payload; \n       console.log(item.image)\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return( {\n          ...state,\n          cartItems: state.cartItems.map((currentItem) =>\n            currentItem.product === existItem.product ? item : currentItem\n          )\n        });\n\n      } else {\n\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };        \n      }      \n \n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
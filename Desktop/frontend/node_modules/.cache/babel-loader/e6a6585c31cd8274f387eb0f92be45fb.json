{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message/Message\";\nimport Loader from \"../components/loader/Loader\";\nimport FormContainer from \"../components/form/Form\"; // import { getUserDetails, updateUser } from \"../redux/actions/User\";\n// import { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEdit = ({\n  match,\n  history\n}) => {\n  return; //   const userId = match.params.id;\n  //   const [name, setName] = useState(\"\");\n  //   const [email, setEmail] = useState(\"\");\n  //   const [isAdmin, setIsAdmin] = useState(false);\n  //   const dispatch = useDispatch();\n  //   const userDetails = useSelector((state) => state.userDetails);\n  //   const { loading, error, user } = userDetails;\n  //   const userUpdate = useSelector((state) => state.userUpdate);\n  //   const {\n  //     loading: loadingUpdate,\n  //     error: errorUpdate,\n  //     success: successUpdate,\n  //   } = userUpdate;\n  //   useEffect(() => {\n  //     if (successUpdate) {\n  //     //   dispatch({ type: USER_UPDATE_RESET });\n  //       history.push(\"/admin/users\");\n  //     } else {\n  //       if (!user.name || user._id !== userId) {\n  //         // dispatch(getUserDetails(userId));\n  //       } else {\n  //         setName(user.name);\n  //         setEmail(user.email);\n  //         setIsAdmin(user.isAdmin);\n  //       }\n  //     }\n  //   }, [dispatch, history, userId, user, successUpdate]);\n  //   const handleUpdate = (e) => {\n  //     e.preventDefault();\n  //     // dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  //   };\n  //   return (\n  //     <>\n  //       <Link to=\"/admin/users\" className=\"btn btn-light my-3\">\n  //         Go Back\n  //       </Link>\n  //       <FormContainer>\n  //         <h1>Edit User</h1>\n  //         {loadingUpdate && <Loader />}\n  //         {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n  //         {loading ? (\n  //           <Loader />\n  //         ) : error ? (\n  //           <Message variant=\"danger\">{error}</Message>\n  //         ) : (\n  //           <Form onSubmit={handleUpdate}>\n  //             <Form.Group controlId=\"name\">\n  //               <Form.Label>Name</Form.Label>\n  //               <Form.Control\n  //                 type=\"name\"\n  //                 placeholder=\"Enter name\"\n  //                 value={name}\n  //                 onChange={(e) => setName(e.target.value)}\n  //               ></Form.Control>\n  //             </Form.Group>\n  //             <Form.Group controlId=\"email\">\n  //               <Form.Label>Email Address</Form.Label>\n  //               <Form.Control\n  //                 type=\"email\"\n  //                 placeholder=\"Enter email\"\n  //                 value={email}\n  //                 onChange={(e) => setEmail(e.target.value)}\n  //               ></Form.Control>\n  //             </Form.Group>\n  //             <Form.Group controlId=\"isadmin\">\n  //               <Form.Check\n  //                 type=\"checkbox\"\n  //                 label=\"Is Admin\"\n  //                 checked={isAdmin}\n  //                 onChange={(e) => setIsAdmin(e.target.checked)}\n  //               ></Form.Check>\n  //             </Form.Group>\n  //             <Button type=\"submit\" variant=\"primary\">\n  //               Update\n  //             </Button>\n  //           </Form>\n  //         )}\n  //       </FormContainer>\n  //     </>\n  //   );\n};\n\n_c = UserEdit;\nexport default UserEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEdit\");","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/screen/UserEdit.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","UserEdit","match","history"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B,C,CACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AACrC,SADqC,CAEzC;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CA7FD;;KAAMF,Q;AA+FN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message/Message\";\nimport Loader from \"../components/loader/Loader\";\nimport FormContainer from \"../components/form/Form\";\n// import { getUserDetails, updateUser } from \"../redux/actions/User\";\n// import { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEdit = ({ match, history }) => {\n    return \n//   const userId = match.params.id;\n\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [isAdmin, setIsAdmin] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const userDetails = useSelector((state) => state.userDetails);\n//   const { loading, error, user } = userDetails;\n\n//   const userUpdate = useSelector((state) => state.userUpdate);\n  \n//   const {\n//     loading: loadingUpdate,\n//     error: errorUpdate,\n//     success: successUpdate,\n//   } = userUpdate;\n\n//   useEffect(() => {\n//     if (successUpdate) {\n//     //   dispatch({ type: USER_UPDATE_RESET });\n//       history.push(\"/admin/users\");\n//     } else {\n//       if (!user.name || user._id !== userId) {\n//         // dispatch(getUserDetails(userId));\n//       } else {\n//         setName(user.name);\n//         setEmail(user.email);\n//         setIsAdmin(user.isAdmin);\n//       }\n//     }\n//   }, [dispatch, history, userId, user, successUpdate]);\n\n//   const handleUpdate = (e) => {\n//     e.preventDefault();\n//     // dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n//   };\n\n//   return (\n//     <>\n//       <Link to=\"/admin/users\" className=\"btn btn-light my-3\">\n//         Go Back\n//       </Link>\n//       <FormContainer>\n//         <h1>Edit User</h1>\n//         {loadingUpdate && <Loader />}\n//         {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n//         {loading ? (\n//           <Loader />\n//         ) : error ? (\n//           <Message variant=\"danger\">{error}</Message>\n//         ) : (\n//           <Form onSubmit={handleUpdate}>\n//             <Form.Group controlId=\"name\">\n//               <Form.Label>Name</Form.Label>\n//               <Form.Control\n//                 type=\"name\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             <Form.Group controlId=\"email\">\n//               <Form.Label>Email Address</Form.Label>\n//               <Form.Control\n//                 type=\"email\"\n//                 placeholder=\"Enter email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//               ></Form.Control>\n//             </Form.Group>\n\n//             <Form.Group controlId=\"isadmin\">\n//               <Form.Check\n//                 type=\"checkbox\"\n//                 label=\"Is Admin\"\n//                 checked={isAdmin}\n//                 onChange={(e) => setIsAdmin(e.target.checked)}\n//               ></Form.Check>\n//             </Form.Group>\n\n//             <Button type=\"submit\" variant=\"primary\">\n//               Update\n//             </Button>\n//           </Form>\n//         )}\n//       </FormContainer>\n//     </>\n//   );\n};\n\nexport default UserEdit;\n"]},"metadata":{},"sourceType":"module"}
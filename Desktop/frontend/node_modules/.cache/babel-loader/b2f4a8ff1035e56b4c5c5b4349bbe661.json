{"ast":null,"code":"import thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { cartReducer } from \"./reducers/Cart\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { orderCreateReducer } from \"./reducers/Order\";\nimport { userLoginReducers, userRegisterReducers, userDetailsReducers, userUpdateProfileReducers } from \"./reducers/User\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/Product\";\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducers, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/Store.js"],"names":["thunk","createStore","combineReducers","applyMiddleware","cartReducer","composeWithDevTools","orderCreateReducer","userLoginReducers","userRegisterReducers","userDetailsReducers","userUpdateProfileReducers","productListReducer","productDetailsReducer","reducers","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,mBAHF,EAIEC,yBAJF,QAMO,iBANP;AAOA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,oBAA1D;AAEA,MAAMC,QAAQ,GAAGX,eAAe,CAAC;AAC/BY,EAAAA,WAAW,EAAEH,kBADkB;AAE/BI,EAAAA,cAAc,EAAEH,qBAFe;AAG/BI,EAAAA,IAAI,EAAEZ,WAHyB;AAI/Ba,EAAAA,SAAS,EAAEV,iBAJoB;AAK/BW,EAAAA,YAAY,EAAEV,oBALiB;AAM/BW,EAAAA,WAAW,EAAEV,mBANkB;AAO/BW,EAAAA,iBAAiB,EAAEV,yBAPY;AAQ/BW,EAAAA,WAAW,EAAEf;AARkB,CAAD,CAAhC;AAYA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBb,EAAAA,IAAI,EAAE;AACJc,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBX,EAAAA,SAAS,EAAE;AAAEe,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACjC,KAAD,CAAnB;AAEA,MAAMkC,KAAK,GAAGjC,WAAW,CACvBY,QADuB,EAEvBgB,YAFuB,EAGvBxB,mBAAmB,CAACF,eAAe,CAAC,GAAG8B,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import thunk from \"redux-thunk\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { cartReducer } from \"./reducers/Cart\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { orderCreateReducer } from \"./reducers/Order\";\nimport {\n  userLoginReducers,\n  userRegisterReducers,\n  userDetailsReducers,\n  userUpdateProfileReducers,\n\n} from \"./reducers/User\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/Product\";\n\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducers,\n  userRegister: userRegisterReducers,\n  userDetails: userDetailsReducers,\n  userUpdateProfile: userUpdateProfileReducers,\n  orderCreate: orderCreateReducer,\n  \n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}
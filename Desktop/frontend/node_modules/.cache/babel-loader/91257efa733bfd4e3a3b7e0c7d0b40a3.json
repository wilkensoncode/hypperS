{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(currentItem => currentItem.product === existItem.product ? item : currentItem)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","currentItem","filter"],"mappings":"AAAA,SAASA,aAAT,EAAuBC,gBAAvB,QAA+C,+BAA/C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBC,WAAD,IAC7BA,WAAW,CAACF,OAAZ,KAAwBH,SAAS,CAACG,OAAlC,GAA4CL,IAA5C,GAAmDO,WAD1C;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGX,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AAEH,SAAKN,gBAAL;AACE,aAAO,EAAC,GAAGE,KAAJ;AAAWC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBJ,CAAC,IAAGA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAhD;AAAtB,OAAP;;AAEF;AACE,aAAOL,KAAP;AAxBJ;AA0BD,CA3BM","sourcesContent":["import { CART_ADD_ITEM,CART_REMOVE_ITEM } from \"../../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((currentItem) =>\n            currentItem.product === existItem.product ? item : currentItem\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return {...state, cartItems: state.cartItems.filter(x =>x.product !== action.payload)}\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { CART_ADD_ITEM } from \"../../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      console.log(ca);\n      const existItem = state.cartItems.find(isInCart => isInCart.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(currentItem => currentItem.product === existItem.product ? item : currentItem)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","console","log","ca","existItem","find","isInCart","product","map","currentItem"],"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AACE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACM,YAAMC,SAAS,GAAGT,KAAK,CAACC,SAAN,CAAgBS,IAAhB,CACfC,QAAD,IAAcA,QAAQ,CAACC,OAAT,KAAqBR,IAAI,CAACQ,OADxB,CAAlB;;AAIA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGT,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,GAAhB,CAAqBC,WAAD,IAC7BA,WAAW,CAACF,OAAZ,KAAwBH,SAAS,CAACG,OAAlC,GAA4CR,IAA5C,GAAmDU,WAD1C;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGd,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AACH;AACE,aAAOJ,KAAP;AAtBJ;AAwBD,CAzBM","sourcesContent":["import { CART_ADD_ITEM } from \"../../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\nconsole.log(ca)\n      const existItem = state.cartItems.find(\n        (isInCart) => isInCart.product === item.product\n      );\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((currentItem) =>\n            currentItem.product === existItem.product ? item : currentItem\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    default:\n      return state;\n  }\n};\n\n \n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { CART_ADD_ITEM } from \"../../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      console.log(state.cartItems);\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(currentItem => currentItem.product === existItem.product ? item : currentItem)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/wilkenson/Desktop/personalProject/eazyshopMern/frontend/src/redux/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","console","log","item","payload","existItem","find","x","product","map","currentItem"],"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAEhE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AACJM,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,SAAlB;AACM,YAAMK,IAAI,GAAGJ,MAAM,CAACK,OAApB;AAEA,YAAMC,SAAS,GAAGR,KAAK,CAACC,SAAN,CAAgBQ,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACb,eAAQ,EACN,GAAGR,KADG;AAENC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAqBC,WAAD,IAC7BA,WAAW,CAACF,OAAZ,KAAwBH,SAAS,CAACG,OAAlC,GAA4CL,IAA5C,GAAmDO,WAD1C;AAFL,SAAR;AAOD,OARD,MAQO;AAEL,eAAO,EACL,GAAGb,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBK,IAArB;AAFN,SAAP;AAID;;AAEH;AACE,aAAON,KAAP;AAxBJ;AA0BD,CA5BM","sourcesContent":["import { CART_ADD_ITEM } from \"../../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\nconsole.log(state.cartItems)\n      const item = action.payload; \n    \n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return( {\n          ...state,\n          cartItems: state.cartItems.map((currentItem) =>\n            currentItem.product === existItem.product ? item : currentItem\n          )\n        });\n\n      } else {\n\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        };        \n      }      \n \n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}